version: '3.8'

services:
  # ===========================
  # PostgreSQL Database
  # ===========================
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: crypto_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    secrets:
      - postgres_user
      - postgres_password
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5


  # ===========================
  # pgAdmin (DB Management)
  # ===========================
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    ports:
      - "5050:80"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}


  # ===========================
  # Node.js Application
  # ===========================
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crypto-payments-app
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: crypto_db
    ports:
      - "3000:3000"
    secrets:
      - postgres_user
      - postgres_password
    volumes:
      - ./data:/app/data
    entrypoint: ["/bin/sh", "/usr/local/bin/docker-entrypoint.sh"]

volumes:
  postgres_data:

secrets:
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_password:
    file: ./secrets/postgres_password.txt